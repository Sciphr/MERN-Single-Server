{"version":3,"file":"static/js/290.436208e3.chunk.js","mappings":"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","sources":["Shared/Components/UIElements/Map.js","Places/Components/PlaceItem.js","Places/Components/PlaceList.js","Places/Pages/UserPlaces.js","Shared/Components/UIElements/Card.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  //To make things look better, since we know 2 props called 'center' and 'zoom' are coming, we can destructure it so instead of typing 'props.center' each time, we can just type 'center' for example.\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport Modal from \"../../Shared/Components/UIElements/Modal\";\r\nimport Map from \"../../Shared/Components/UIElements/Map\";\r\nimport { AuthContext } from \"../../Shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\n\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => {\r\n    setShowMap(true);\r\n  };\r\n\r\n  const closeMapHandler = () => {\r\n    setShowMap(false);\r\n  };\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    console.log(\"deleting\");\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  //**Map coordinates comes from props from PlaceList, which comes from UserPlaces */\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item_modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              Cancel\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              Delete\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              View On Map\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>Edit</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../Components/PlaceList\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  //useParams gets the dynamic part of a URL. In this example: In app.js, using the React Router package, we are setting up a dynamic URL with ':userId'\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  //Can't make useEffect functions async. So we make a function inside of it\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeleteHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","ref","className","style","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","console","log","process","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","items","length","place","creator","location","onDeletePlace","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","responseData","places","deletedPlaceId","prevPlaces","filter","children"],"sourceRoot":""}