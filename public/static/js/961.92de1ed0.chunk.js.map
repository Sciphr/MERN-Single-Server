{"version":3,"file":"static/js/961.92de1ed0.chunk.js","mappings":"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","sources":["Shared/Components/FormElements/ImageUpload.js","Shared/Components/FormElements/Input.js","Shared/Components/UIElements/Card.js","Shared/hooks/form-hook.js","Shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","User/Pages/Auth.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    // console.log(event.target);\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    //This class name is coming from the Input.css file since it isn't scoped\r\n    //Styling in the Input field is inline just to get it done fast here\r\n    //Classname of the second div, will change depending on if there is a 'center' property coming from 'props'\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        ref={filePickerRef}\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          Pick Image\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  //using useReducer because the 2 states we are handling are very similar/have to do with each other. Otherwise, we could use 2 sepearate 'useStates'\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  }); //Second argument is the initial state of the reducer\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []); //Used to avoid infinite loop as this function would keep running otherwise when it isn't needed, due to the useEffect in 'input.js'\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport Input from \"../../Shared/Components/FormElements/Input\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../Shared/Components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../Shared/util/validators\";\r\nimport { useForm } from \"../../Shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../Shared/context/auth-context\";\r\n\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [error, setError] = useState();\r\n  // The custom hook now takes care of these 2 states\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    // setIsLoading(true);\r\n    console.log(formState.inputs);\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n        //Custom hook does this\r\n        // const responseData = await response.json();\r\n        // if (!response.ok) {\r\n        //   throw new Error(responseData.message);\r\n        // }\r\n        // setIsLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        // setIsLoading(false);\r\n        // setError(err.message || \"Something went wrong. Please try again\");\r\n      }\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          \"POST\",\r\n          formData\r\n          // JSON.stringify({\r\n          //   name: formState.inputs.name.value,\r\n          //   email: formState.inputs.email.value,\r\n          //   password: formState.inputs.password.value,\r\n          // }),\r\n          // {\r\n          //   \"Content-Type\": \"application/json\",\r\n          // }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n        // const responseData = await response.json();\r\n        // if (!response.ok) {\r\n        //   throw new Error(responseData.message);\r\n        // }\r\n\r\n        // setIsLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        // setIsLoading(false);\r\n        // setError(err.message || \"Something went wrong. Please try again\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // const errorHandler = () => {\r\n  //   clearError();\r\n  // };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              id=\"image\"\r\n              center\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"E-mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"Login\" : \"Signup\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          Switch to {isLoginMode ? \"Signup\" : \"Login\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","type","ref","id","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","children","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","preventDefault","console","log","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","ImageUpload","disabled","inverse","undefined","prevMode"],"sourceRoot":""}