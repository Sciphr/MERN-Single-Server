{"version":3,"file":"static/js/905.34f789f0.chunk.js","mappings":"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","sources":["Places/Pages/UpdatePlace.js","Shared/Components/FormElements/Input.js","Shared/Components/UIElements/Card.js","Shared/hooks/form-hook.js","Shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\n\r\nimport Button from \"../../Shared/Components/FormElements/Button\";\r\nimport Input from \"../../Shared/Components/FormElements/Input\";\r\nimport Card from \"../../Shared/Components/UIElements/Card\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../Shared/util/validators\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"../../Shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport \"./PlaceForm.css\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../Shared/Components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../Shared/context/auth-context\";\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  // const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData, auth.userId, history]);\r\n\r\n  const placeUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      history.push(\"/\" + auth.userId + \"/places\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find a place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            Update Place\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  //using useReducer because the 2 states we are handling are very similar/have to do with each other. Otherwise, we could use 2 sepearate 'useStates'\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  }); //Second argument is the initial state of the reducer\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []); //Used to avoid infinite loop as this function would keep running otherwise when it isn't needed, due to the useEffect in 'input.js'\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","useForm","title","value","isValid","description","formState","inputHandler","setFormData","useEffect","fetchPlace","process","responseData","place","userId","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","className","onClear","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","disabled","inputReducer","state","action","val","validate","isTouched","props","useReducer","inputState","dispatch","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","children","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}